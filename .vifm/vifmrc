" vim: filetype=vim :
set vicmd=vim
" set vicmd=elvis\ -G\ termcap
" set vicmd=vile

" Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.

set trash

" This is how many directories to store in the directory history.

set history=100

" make ctrl-i behave as in vim
set cpoptions-=t

" Follow links on l or Enter.

set followlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

set fastrun

" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.

set novimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

"set norunexec

" Use KiB, MiB, ... instead of KB, MB, ...

set noiec

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=%m/%d\ %H:%M

" Show list of matches on tab complition in command-line mode

set wildmenu

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

set grepprg="ag -H -i -r %i %a %s"
nmap ,f :grep 

set findprg="where /R %s %A"

" Turn tmux integration on
:screen

" Don't highlight search results automatically

set hlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=4

" Don't do to much requests to slow file systems

""set slowfs=curlftpfs

" Set custom status line look

set statusline="  %t%= %A %15s %20d"
set rulerformat=" %2l-%S%[ +%0-%]"

" :mark mark /full/directory/path [filename]

mark h ~/
mark i f:/IWMain/Desktop/Source
mark t f:/IWMain/Test/api/aim/tests/javascript
mark s f:/software

" :com[mand] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command df df -h %m 2> /dev/null
command diff vim -d %f %F
command zip zip -r %f.zip %f
command run !! ./%f
command make !!make
command vgrep vim "+grep %a"

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" All
filetype *.* start %f &

set nowrap

" Sample mappings

nmap s :shell<cr>
nmap S :sort<cr>
nmap w :view<cr>
nmap o :edit<cr>
nmap O :!start %f<cr>

" Open file in the background using its default program
nmap gb :file &<cr>l

" yank current directory path to Windows clipboard with forward slashes
nnoremap yd :!echo %"d:gs!\!/! %i | clip<cr>
"
" " yank current directory path to Windows clipboard with backward slashes
nnoremap yD :!echo %"d %i | clip<cr>
"
" " yank path to current file to Windows clipboard with forward slashes
nnoremap yf :!echo %"c:gs!\!/! %i | clip<cr>
"
" " yank path to current directory to Windows clipboard with backward slashes
nnoremap yF :!echo %"c %i | clip<cr>
"
" " yank current filename without path to Windows clipboard
nnoremap yn :!echo %"c %i | clip<cr>
"
" " yank root of current file's name to Windows clipboard
nnoremap yr :!echo -n %c:r | clip<cr>

" Mappings for faster renaming
nmap I cw<c-a>
nmap cc cw<c-u>
nmap A cw<c-w>

" Opening vim to edit .vifmrc
nmap ,c :execute ':!vim $MYVIFMRC' | restart<cr>
" Opening gvim to edit .vifmrc
nmap ,C :!vim --remote-tab-silent $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nmap ,w :set wrap!<cr>

" Change drives"
nmap ,v :volumes<cr>

" Example of standard two-panel file managers mappings
nmap <f3> :!less %f<cr>
nmap <f4> :edit<cr>
nmap <f5> :copy<cr>
nmap <f6> :move<cr>
nmap <f7> :mkdir<space>
nmap <f8> :delete<cr>

color mc-like.vifm

" Switch Windows
" nmap <C-h> <C-w>h
" nmap <C-j> <C-w>j
" nmap <C-k> <C-w>k
" nmap <C-l> <C-w>l
"
" Reva's changes
nmap _r :!start f:/iwmain/desktop/output/x64/release/InfraWorks.exe<cr>
nmap _d :!start f:/iwmain/desktop/output/x64/debug/InfraWorks.exe<cr>
nmap _n :!start vim<cr>
nmap <c-\> :cd /<cr>
nmap <bs> h
nmap _v :!start f:/iwmain/desktop/aim.sln<cr>

nmap _f :cd f:/<cr>
nmap _c :cd c:/<cr>

nmap _t :!ctags -R .<cr>

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
     \phistory,dirstack,registers,bookmarks
